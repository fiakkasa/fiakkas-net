@inject ILogger<App> Logger
@inject IOptions<UiConfig> Options
@attribute [ExcludeFromCodeCoverage]

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1"/>
    <base href="./"/>
    <link rel="stylesheet" href="full-screen-loader.css"/>
    <link rel="stylesheet" href="bootstrap.min.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"/>
    <link rel="stylesheet" href="app.css"/>
    <link rel="stylesheet" href="ui.styles.css"/>
    <link rel="icon" type="image/png" href="favicon.png"/>
    <meta name="description" content="@_uiConfig.Description"/>
    <meta name="keywords" content="@_uiConfig.Keywords"/>
    <meta name="author" content="@_uiConfig.Author"/>
    <script src="theme-auto-switcher.js?t=@_timestamp"></script>
    <HeadOutlet @rendermode="InteractiveServer"/>
</head>

<body>
<div class="full-screen-loader" data-message="@_uiConfig.Title"></div>
<Routes @rendermode="InteractiveServer"/>
<script src="_framework/blazor.web.js"></script>
</body>

</html>

@code {
    private UiConfig _uiConfig = new();
    private readonly long _timestamp = DateTimeOffset.Now.ToUnixTimeMilliseconds();

    protected override void OnInitialized()
    {
        try
        {
            _uiConfig = Options.Value;
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Failed to acquire options with message: {Message}", ex.Message);
        }

        base.OnInitialized();
    }

}
